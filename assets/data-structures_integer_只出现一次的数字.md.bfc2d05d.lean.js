import{_ as n,c as a,o as s,a as t}from"./app.a1f82200.js";const h='{"title":"\u53EA\u51FA\u73B0\u4E00\u6B21\u7684\u6570\u5B57","description":"","frontmatter":{},"headers":[{"level":2,"title":"\u9898\u76EE","slug":"\u9898\u76EE"},{"level":2,"title":"\u601D\u8DEF","slug":"\u601D\u8DEF"},{"level":2,"title":"\u4EE3\u7801","slug":"\u4EE3\u7801"}],"relativePath":"data-structures/integer/\u53EA\u51FA\u73B0\u4E00\u6B21\u7684\u6570\u5B57.md","lastUpdated":1641702993046}',p={},e=t(`__VP_STATIC_START__<h1 id="\u53EA\u51FA\u73B0\u4E00\u6B21\u7684\u6570\u5B57" tabindex="-1">\u53EA\u51FA\u73B0\u4E00\u6B21\u7684\u6570\u5B57 <a class="header-anchor" href="#\u53EA\u51FA\u73B0\u4E00\u6B21\u7684\u6570\u5B57" aria-hidden="true">#</a></h1><h2 id="\u9898\u76EE" tabindex="-1">\u9898\u76EE <a class="header-anchor" href="#\u9898\u76EE" aria-hidden="true">#</a></h2><p><a href="https://leetcode-cn.com/problems/WGki4K/" target="_blank" rel="noopener noreferrer">\u5251\u6307 Offer II 004. \u53EA\u51FA\u73B0\u4E00\u6B21\u7684\u6570\u5B57</a></p><p>\u7ED9\u4F60\u4E00\u4E2A\u6574\u6570\u6570\u7EC4 nums \uFF0C\u9664\u67D0\u4E2A\u5143\u7D20\u4EC5\u51FA\u73B0 \u4E00\u6B21 \u5916\uFF0C\u5176\u4F59\u6BCF\u4E2A\u5143\u7D20\u90FD\u6070\u51FA\u73B0 \u4E09\u6B21 \u3002\u8BF7\u4F60\u627E\u51FA\u5E76\u8FD4\u56DE\u90A3\u4E2A\u53EA\u51FA\u73B0\u4E86\u4E00\u6B21\u7684\u5143\u7D20\u3002</p><h2 id="\u601D\u8DEF" tabindex="-1">\u601D\u8DEF <a class="header-anchor" href="#\u601D\u8DEF" aria-hidden="true">#</a></h2><h2 id="\u4EE3\u7801" tabindex="-1">\u4EE3\u7801 <a class="header-anchor" href="#\u4EE3\u7801" aria-hidden="true">#</a></h2><p><strong>1. \u54C8\u5E0C\u8868</strong></p><div class="language-js"><pre><code><span class="token comment">/**
 * @param {number[]} nums
 * @return {number}
 */</span>
<span class="token keyword">var</span> <span class="token function-variable function">singleNumber</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">nums</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> map <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> nums<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> value <span class="token operator">=</span> nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
    map<span class="token punctuation">[</span>value<span class="token punctuation">]</span> <span class="token operator">=</span> map<span class="token punctuation">[</span>value<span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token keyword">undefined</span> <span class="token operator">?</span> <span class="token number">1</span> <span class="token operator">:</span> <span class="token operator">++</span>map<span class="token punctuation">[</span>value<span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> key <span class="token keyword">in</span> map<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>map<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> key<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre></div>__VP_STATIC_END__`,8),o=[e];function c(r,u,l,k,i,d){return s(),a("div",null,o)}var m=n(p,[["render",c]]);export{h as __pageData,m as default};
