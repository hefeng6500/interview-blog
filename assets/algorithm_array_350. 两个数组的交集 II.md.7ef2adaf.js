import{_ as n,c as s,o as a,e as p}from"./app.1a8e239b.js";const _='{"title":"350. \u4E24\u4E2A\u6570\u7EC4\u7684\u4EA4\u96C6 II","description":"","frontmatter":{},"headers":[{"level":3,"title":"\u89E3\u6CD5","slug":"\u89E3\u6CD5"}],"relativePath":"algorithm/array/350. \u4E24\u4E2A\u6570\u7EC4\u7684\u4EA4\u96C6 II.md","lastUpdated":1639808999434}',t={},o=p(`<h1 id="_350-\u4E24\u4E2A\u6570\u7EC4\u7684\u4EA4\u96C6-ii" tabindex="-1">350. \u4E24\u4E2A\u6570\u7EC4\u7684\u4EA4\u96C6 II <a class="header-anchor" href="#_350-\u4E24\u4E2A\u6570\u7EC4\u7684\u4EA4\u96C6-ii" aria-hidden="true">#</a></h1><p>\u7ED9\u5B9A\u4E24\u4E2A\u6570\u7EC4\uFF0C\u7F16\u5199\u4E00\u4E2A\u51FD\u6570\u6765\u8BA1\u7B97\u5B83\u4EEC\u7684\u4EA4\u96C6\u3002</p><p>\u793A\u4F8B 1\uFF1A</p><div class="language-"><pre><code>\u8F93\u5165\uFF1Anums1 = [1,2,2,1], nums2 = [2,2]
\u8F93\u51FA\uFF1A[2,2]
</code></pre></div><p>\u793A\u4F8B 2:</p><div class="language-"><pre><code>\u8F93\u5165\uFF1Anums1 = [4,9,5], nums2 = [9,4,9,8,4]
\u8F93\u51FA\uFF1A[4,9]
</code></pre></div><p>\u8BF4\u660E\uFF1A</p><ul><li>\u8F93\u51FA\u7ED3\u679C\u4E2D\u6BCF\u4E2A\u5143\u7D20\u51FA\u73B0\u7684\u6B21\u6570\uFF0C\u5E94\u4E0E\u5143\u7D20\u5728\u4E24\u4E2A\u6570\u7EC4\u4E2D\u51FA\u73B0\u6B21\u6570\u7684\u6700\u5C0F\u503C\u4E00\u81F4\u3002</li><li>\u6211\u4EEC\u53EF\u4EE5\u4E0D\u8003\u8651\u8F93\u51FA\u7ED3\u679C\u7684\u987A\u5E8F\u3002</li></ul><p>\u8FDB\u9636\uFF1A</p><ul><li>\u5982\u679C\u7ED9\u5B9A\u7684\u6570\u7EC4\u5DF2\u7ECF\u6392\u597D\u5E8F\u5462\uFF1F\u4F60\u5C06\u5982\u4F55\u4F18\u5316\u4F60\u7684\u7B97\u6CD5\uFF1F</li><li>\u5982\u679C \xA0nums1\xA0 \u7684\u5927\u5C0F\u6BD4 \xA0nums2\xA0 \u5C0F\u5F88\u591A\uFF0C\u54EA\u79CD\u65B9\u6CD5\u66F4\u4F18\uFF1F</li><li>\u5982\u679C \xA0nums2\xA0 \u7684\u5143\u7D20\u5B58\u50A8\u5728\u78C1\u76D8\u4E0A\uFF0C\u5185\u5B58\u662F\u6709\u9650\u7684\uFF0C\u5E76\u4E14\u4F60\u4E0D\u80FD\u4E00\u6B21\u52A0\u8F7D\u6240\u6709\u7684\u5143\u7D20\u5230\u5185\u5B58\u4E2D\uFF0C\u4F60\u8BE5\u600E\u4E48\u529E\uFF1F</li></ul><h3 id="\u89E3\u6CD5" tabindex="-1">\u89E3\u6CD5 <a class="header-anchor" href="#\u89E3\u6CD5" aria-hidden="true">#</a></h3><p><strong>1\u3001\u5148\u5BF9\u4E24\u4E2A\u6570\u7EC4\u8FDB\u884C\u6392\u5E8F</strong></p><p>\u5148\u5BF9\u4E24\u4E2A\u6570\u7EC4\u8FDB\u884C\u6392\u5E8F\uFF0C\u7136\u540E\u4F7F\u7528\u4E24\u4E2A\u6307\u9488\uFF0C\u5206\u522B\u6307\u5411\u4E24\u4E2A\u6570\u7EC4\u5F00\u59CB\u7684\u4F4D\u7F6E\u3002</p><ul><li>\u5982\u679C\u4E24\u4E2A\u6307\u9488\u6307\u5411\u7684\u503C\u76F8\u540C\uFF0C\u8BF4\u660E\u8FD9\u4E2A\u503C\u662F\u4ED6\u4EEC\u7684\u4EA4\u96C6\uFF0C\u5C31\u628A\u8FD9\u4E2A\u503C\u52A0\u5165\u5230\u96C6\u5408 list \u4E2D\uFF0C\u7136\u540E\u4E24\u4E2A\u6307\u9488\u5728\u5206\u522B\u5F80\u540E\u79FB\u4E00\u6B65\u3002</li><li>\u5982\u679C\u4E24\u4E2A\u6307\u9488\u6307\u5411\u7684\u503C\u4E0D\u540C\uFF0C\u90A3\u4E48\u6307\u5411\u7684\u503C\u76F8\u5BF9\u5C0F\u7684\u5F80\u540E\u79FB\u4E00\u6B65\uFF0C\u76F8\u5BF9\u5927\u7684\u5148\u4E0D\u52A8\uFF0C\u7136\u540E\u518D\u6BD4\u8F83</li></ul><p>\u4E00\u76F4\u91CD\u590D\u4E0A\u9762\u7684\u64CD\u4F5C\uFF0C\u76F4\u5230\u5176\u4E2D\u4E00\u4E2A\u6307\u9488\u4E0D\u80FD\u518D\u79FB\u52A8\u4E3A\u6B62\uFF0C\u6700\u540E\u518D\u628A\u96C6\u5408 list \u8F6C\u5316\u4E3A\u6570\u7EC4\u5373\u53EF</p><div class="language-js"><pre><code><span class="token comment">/**
 * @param {number[]} nums1
 * @param {number[]} nums2
 * @return {number[]}
 */</span>
<span class="token keyword">var</span> <span class="token function-variable function">intersect</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">nums1<span class="token punctuation">,</span> nums2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  nums1<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> a <span class="token operator">-</span> b<span class="token punctuation">)</span><span class="token punctuation">;</span>
  nums2<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> a <span class="token operator">-</span> b<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> result <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

  <span class="token keyword">while</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;</span> nums1<span class="token punctuation">.</span>length <span class="token operator">&amp;&amp;</span> j <span class="token operator">&lt;</span> nums2<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>nums1<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">===</span> nums2<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      result<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>nums1<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      i<span class="token operator">++</span><span class="token punctuation">;</span>
      j<span class="token operator">++</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>nums1<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&lt;</span> nums2<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      i<span class="token operator">++</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      j<span class="token operator">++</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> result<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre></div><p><strong>2\u3001\u4F7F\u7528map\u89E3\u51B3</strong></p><p>\u8FD8\u53EF\u4EE5\u4F7F\u7528map\u6765\u89E3\u51B3\uFF0C\u5177\u4F53\u64CD\u4F5C\u5982\u4E0B</p><ul><li><p>\u904D\u5386nums1\u4E2D\u7684\u6240\u6709\u5143\u7D20\uFF0C\u628A\u5B83\u5B58\u653E\u5230map\u4E2D\uFF0C\u5176\u4E2Dkey\u5C31\u662Fnums1\u4E2D\u7684\u5143\u7D20\uFF0Cvalue\u5C31\u662F\u8FD9\u4E2A\u5143\u7D20\u5728\u6570\u7EC4nums1\u4E2D\u51FA\u73B0\u7684\u6B21\u6570\u3002</p></li><li><p>\u904D\u5386nums2\u4E2D\u7684\u6240\u6709\u5143\u7D20\uFF0C\u67E5\u770Bmap\u4E2D\u662F\u5426\u5305\u542Bnums2\u7684\u5143\u7D20\uFF0C\u5982\u679C\u5305\u542B\uFF0C\u5C31\u628A\u5F53\u524D\u503C\u52A0\u5165\u5230\u96C6\u5408list\u4E2D\uFF0C\u7136\u540E\u5BF9\u5E94\u7684value\u8981\u51CF1\u3002</p></li></ul><div class="language-js"><pre><code><span class="token comment">/**
 * @param {number[]} nums1
 * @param {number[]} nums2
 * @return {number[]}
 */</span>
<span class="token keyword">var</span> <span class="token function-variable function">intersect</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">nums1<span class="token punctuation">,</span> nums2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> map <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> nums1<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>map<span class="token punctuation">[</span>nums1<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token keyword">undefined</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      map<span class="token punctuation">[</span>nums1<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      map<span class="token punctuation">[</span>nums1<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">+=</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">let</span> result <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> nums2<span class="token punctuation">.</span>length<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>map<span class="token punctuation">[</span>nums2<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      result<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>nums2<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      map<span class="token punctuation">[</span>nums2<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">-=</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> result<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre></div>`,20),e=[o];function c(u,l,k,i,r,m){return a(),s("div",null,e)}var f=n(t,[["render",c]]);export{_ as __pageData,f as default};
