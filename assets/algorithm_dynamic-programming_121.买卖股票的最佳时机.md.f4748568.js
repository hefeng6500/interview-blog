import{_ as n,c as s,o as a,e as p}from"./app.e8527bf5.js";const g='{"title":"121.\u4E70\u5356\u80A1\u7968\u7684\u6700\u4F73\u65F6\u673A","description":"","frontmatter":{},"headers":[{"level":3,"title":"\u89E3\u6CD5","slug":"\u89E3\u6CD5"}],"relativePath":"algorithm/dynamic-programming/121.\u4E70\u5356\u80A1\u7968\u7684\u6700\u4F73\u65F6\u673A.md","lastUpdated":1639887773565}',t={},o=p(`<h1 id="_121-\u4E70\u5356\u80A1\u7968\u7684\u6700\u4F73\u65F6\u673A" tabindex="-1">121.\u4E70\u5356\u80A1\u7968\u7684\u6700\u4F73\u65F6\u673A <a class="header-anchor" href="#_121-\u4E70\u5356\u80A1\u7968\u7684\u6700\u4F73\u65F6\u673A" aria-hidden="true">#</a></h1><p>\u7ED9\u5B9A\u4E00\u4E2A\u6570\u7EC4 <code>prices</code> \uFF0C\u5B83\u7684\u7B2C \xA0i \u4E2A\u5143\u7D20 \xA0<code>prices[i]</code> \u8868\u793A\u4E00\u652F\u7ED9\u5B9A\u80A1\u7968\u7B2C <code>i</code> \u5929\u7684\u4EF7\u683C\u3002</p><p>\u4F60\u53EA\u80FD\u9009\u62E9 <strong>\u67D0\u4E00\u5929</strong> \u4E70\u5165\u8FD9\u53EA\u80A1\u7968\uFF0C\u5E76\u9009\u62E9\u5728 <strong>\u672A\u6765\u7684\u67D0\u4E00\u4E2A\u4E0D\u540C\u7684\u65E5\u5B50</strong> \u5356\u51FA\u8BE5\u80A1\u7968\u3002\u8BBE\u8BA1\u4E00\u4E2A\u7B97\u6CD5\u6765\u8BA1\u7B97\u4F60\u6240\u80FD\u83B7\u53D6\u7684\u6700\u5927\u5229\u6DA6\u3002</p><p>\u8FD4\u56DE\u4F60\u53EF\u4EE5\u4ECE\u8FD9\u7B14\u4EA4\u6613\u4E2D\u83B7\u53D6\u7684\u6700\u5927\u5229\u6DA6\u3002\u5982\u679C\u4F60\u4E0D\u80FD\u83B7\u53D6\u4EFB\u4F55\u5229\u6DA6\uFF0C\u8FD4\u56DE <code>0</code> \u3002</p><p><strong>\u793A\u4F8B 1\uFF1A</strong></p><div class="language-"><pre><code>\u8F93\u5165\uFF1A[7,1,5,3,6,4]
\u8F93\u51FA\uFF1A5

\u89E3\u91CA\uFF1A
\u5728\u7B2C 2 \u5929\uFF08\u80A1\u7968\u4EF7\u683C = 1\uFF09\u7684\u65F6\u5019\u4E70\u5165\uFF0C\u5728\u7B2C 5 \u5929\uFF08\u80A1\u7968\u4EF7\u683C = 6\uFF09\u7684\u65F6\u5019\u5356\u51FA\uFF0C\u6700\u5927\u5229\u6DA6 = 6-1 = 5 \u3002
\u6CE8\u610F\u5229\u6DA6\u4E0D\u80FD\u662F 7-1 = 6, \u56E0\u4E3A\u5356\u51FA\u4EF7\u683C\u9700\u8981\u5927\u4E8E\u4E70\u5165\u4EF7\u683C\uFF1B\u540C\u65F6\uFF0C\u4F60\u4E0D\u80FD\u5728\u4E70\u5165\u524D\u5356\u51FA\u80A1\u7968\u3002
</code></pre></div><p><strong>\u793A\u4F8B 2\uFF1A</strong></p><div class="language-"><pre><code>\u8F93\u5165\uFF1Aprices = [7,6,4,3,1]
\u8F93\u51FA\uFF1A0
\u89E3\u91CA\uFF1A\u5728\u8FD9\u79CD\u60C5\u51B5\u4E0B, \u6CA1\u6709\u4EA4\u6613\u5B8C\u6210, \u6240\u4EE5\u6700\u5927\u5229\u6DA6\u4E3A 0\u3002
</code></pre></div><p>\u63D0\u793A\uFF1A</p><ul><li>1 &lt;= prices.length &lt;= 105</li><li>0 &lt;= prices[i] &lt;= 104</li></ul><h3 id="\u89E3\u6CD5" tabindex="-1">\u89E3\u6CD5 <a class="header-anchor" href="#\u89E3\u6CD5" aria-hidden="true">#</a></h3><p>\u4E00\u5F00\u59CB\u6211\u4F7F\u7528\u4E86\u53CC\u6307\u9488\uFF0C\u7B80\u5355\u6D4B\u8BD5\u7528\u4F8B\u53EF\u4EE5\u8DD1\u8FC7\uFF0C\u5F53\u539F\u6570\u7EC4\u6570\u503C\u975E\u5E38\u591A\u7684\u65F6\u5019\uFF0C\u6211\u7684\u7B97\u6CD5\u5C31\u8D85\u65F6\u4E86\uFF0C\u4EE3\u7801\u5982\u4E0B\uFF1A</p><div class="language-js"><pre><code><span class="token comment">/**
 * @param {number[]} prices
 * @return {number}
 */</span>
<span class="token keyword">var</span> <span class="token function-variable function">maxProfit</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">prices</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> length <span class="token operator">=</span> prices<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
  <span class="token keyword">const</span> map <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> start <span class="token operator">=</span> prices<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> end <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span><span class="token operator">...</span>prices<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> prices<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>end <span class="token operator">&gt;=</span> start<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      map<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> end <span class="token operator">-</span> start<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> map<span class="token punctuation">.</span>length <span class="token operator">?</span> Math<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span><span class="token operator">...</span>map<span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre></div><p><strong>1\u3001\u53CC\u6307\u9488</strong></p><p>\u8BC4\u8BBA\u533A\u7684\u53CC\u6307\u9488\u662F\u8FD9\u6837\u7684,\u4ED6\u7684\u601D\u8DEF\u662F\u5728\u8FED\u4EE3\u7684\u8FC7\u7A0B\u4E2D\u4E0D\u65AD\u66F4\u65B0 <code>min</code>\uFF0C\u7136\u540E\u8BA9\u5F53\u524D\u503C\u51CF\u53BB <code>min</code>\u518D\u548C <code>max</code> \u76F8\u6BD4\u8F83\u6C42\u6700\u5927\u503C\u3002\u76F8\u6BD4\u6211\u4E0A\u9762\u7684\u64CD\u4F5C\uFF0C\u4ED6\u8FD9\u6837\u5B50\u7A0B\u5E8F\u5C31\u5F88\u8F7B\u4E86\u3002\u6211\u7684\u7B97\u6CD5\u7F3A\u70B9\u662F\uFF1A</p><ul><li>\u6BCF\u6B21\u8FED\u4EE3\u90FD slice \u4E86\u6570\u7EC4 <strong>\u8017\u65F6</strong></li><li>\u6BCF\u6B21\u8FED\u4EE3\u5728\u5269\u4F59\u5143\u7D20\u4E2D\u6C42\u4E86\u6700\u5927\u503C <strong>\u8017\u65F6</strong></li><li>\u4F7F\u7528\u4E86\u54C8\u5E0C\u8868 <code>map</code></li></ul><div class="language-js"><pre><code><span class="token comment">/**
 * @param {number[]} prices
 * @return {number}
 */</span>
<span class="token keyword">var</span> <span class="token function-variable function">maxProfit</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">prices</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>prices <span class="token operator">===</span> <span class="token keyword">null</span> <span class="token operator">||</span> prices<span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">let</span> min <span class="token operator">=</span> prices<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> max <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>

  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> prices<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    min <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span>prices<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> min<span class="token punctuation">)</span><span class="token punctuation">;</span>
    max <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>prices<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">-</span> min<span class="token punctuation">,</span> max<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> max<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre></div><p><strong>2\u3001\u6808</strong></p><p>\u4F7F\u7528\u6808\u7ED3\u6784\u5B58\u50A8\u904D\u5386\u65F6\u7684\u7684\u6700\u5C0F\u503C\uFF0C\u5982\u679C\u5F53\u524D\u503C\u5C0F\u4E8E\u6808\u9876\u5143\u7D20\u65F6\uFF0C\u6808\u9876\u5143\u7D20\u51FA\u6808\u5E76\u5C06\u5F53\u524D\u5143\u7D20\u63A8\u5165\u6808\uFF0C\u5982\u679C\u5F53\u524D\u5143\u7D20\u5927\u4E8E\u6808\u9876\u5143\u7D20\uFF0C\u8BA1\u7B97\u5DEE\u503C\uFF0C\u4E0E\u5386\u53F2\u8BA1\u7B97\u7684\u5DEE\u503C\u76F8\u6BD4\u6C42\u53D6\u6700\u5927\u503C\u3002</p><p>\u5176\u5B9E\u6CA1\u5FC5\u8981\u7528\u6808\u8FD9\u4E2A\u7ED3\u6784\u6765\u5B58\u50A8\uFF0C\u5355\u7EAF\u7684\u4E00\u4E2A\u53D8\u91CF\u4E5F\u53EF\u4EE5\u554A</p><div class="language-js"><pre><code><span class="token comment">/**
 * @param {number[]} prices
 * @return {number}
 */</span>
<span class="token keyword">var</span> <span class="token function-variable function">maxProfit</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">prices</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>prices <span class="token operator">===</span> <span class="token keyword">null</span> <span class="token operator">||</span> prices<span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">let</span> max <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> stack <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

  stack<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>prices<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> prices<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>prices<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&lt;</span> stack<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      stack<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      stack<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>prices<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      max <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>prices<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">-</span> stack<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> max<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> max<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre></div><p><strong>3\u3001\u53C2\u7167\u6700\u5927\u5B50\u5E8F\u548C</strong></p><p><a href="https://mp.weixin.qq.com/s?__biz=MzU0ODMyNDk0Mw==&amp;mid=2247489432&amp;idx=2&amp;sn=6e88498e416ed6cd93c702016c74d852&amp;chksm=fb4184b8cc360dae36230766552209732035395792576c6bf78c556318531391974416f43b14&amp;scene=21#wechat_redirect" target="_blank" rel="noopener noreferrer">\u6700\u5927\u5B50\u5E8F\u548C</a>\u8FD9\u4E2A\u6982\u5FF5\u53EF\u7528\u4E8E\u6C42\u7B97\u4EC0\u4E48\u6CA1\u641E\u6E05\u695A\uFF0C \u4F46\u662F\u5728\u672C\u9898\u7684\u7684\u8BA1\u7B97\u601D\u8DEF\u5374\u662F\u60CA\u5947\u7684</p><div class="language-js"><pre><code><span class="token comment">/**
 * @param {number[]} prices
 * @return {number}
 */</span>
<span class="token keyword">var</span> <span class="token function-variable function">maxProfit</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">prices</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>prices <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> prices<span class="token punctuation">.</span>length <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">const</span> len <span class="token operator">=</span> prices<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
  <span class="token keyword">let</span> max <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> cur <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>

  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> len<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    cur <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>cur<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">+</span> prices<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">-</span> prices<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    max <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>cur<span class="token punctuation">,</span> max<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> max<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre></div><p><strong>4\u3001\u66B4\u529B\u5FAA\u73AF</strong></p><p>\u8BC4\u8BBA\u533A\u7684\u57AB\u5E95\u5199\u6CD5\uFF0C \u5F88\u663E\u7136\u8DDF\u6211\u6700\u5F00\u59CB\u81EA\u5DF1\u7684\u60F3\u6CD5\u7684\u7ED3\u679C\u76F8\u540C\uFF1A<strong>\u8D85\u51FA\u65F6\u95F4\u9650\u5236</strong></p><div class="language-js"><pre><code><span class="token comment">/**
 * @param {number[]} prices
 * @return {number}
 */</span>
<span class="token keyword">var</span> <span class="token function-variable function">maxProfit</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">prices</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>prices <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> prices<span class="token punctuation">.</span>length <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">let</span> max <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>

  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> prices<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> j <span class="token operator">=</span> i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> prices<span class="token punctuation">.</span>length<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      max <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>prices<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">-</span> prices<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> max<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> max<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre></div><p><strong>5\u3001\u52A8\u6001\u89C4\u5212</strong></p><p>\u597D\uFF01\u5230\u4E86\u4ECA\u5929\u7684\u4E3B\u89D2\u4E86\uFF0C \u95EA\u4EAE\u767B\u573A\uFF01\uFF01\uFF01</p><p>\u52A8\u6001\u89C4\u5212</p>`,30),e=[o];function c(u,l,k,r,i,d){return a(),s("div",null,e)}var f=n(t,[["render",c]]);export{g as __pageData,f as default};
